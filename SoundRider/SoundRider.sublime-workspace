{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"coin_strea",
				"coin_streak_left"
			],
			[
				"coin_streak",
				"coin_streak_i"
			],
			[
				"coin",
				"coin_prefab"
			],
			[
				"spectrum",
				"spectrum_averages"
			],
			[
				"spec",
				"spectrum_averages"
			],
			[
				"Serial",
				"SerializeField\t[class]"
			],
			[
				"wave",
				"wave_prefab"
			]
		]
	},
	"buffers":
	[
		{
			"file": "Assets/Scripts/Example.cs",
			"settings":
			{
				"buffer_size": 1499,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/_Core/Scripts/PlatformCreator.cs",
			"settings":
			{
				"buffer_size": 5319,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/_Core/Scripts/PlayerController.cs",
			"settings":
			{
				"buffer_size": 2535,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/_Core/Scripts/Tween.cs",
			"settings":
			{
				"buffer_size": 1114,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/_Core/Scripts/SkyboxHandler.cs",
			"settings":
			{
				"buffer_size": 653,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "Assets/Plugins/FarlandSkies/Demo/Scripts/Skybox/SkyboxRotator.cs",
			"settings":
			{
				"buffer_size": 350,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Assets/Scripts/Rotate.cs",
			"settings":
			{
				"buffer_size": 274,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/*\n * Copyright (c) 2015 Allan Pichardo\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *  http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nusing UnityEngine;\nusing System.Collections;\nusing System.Collections.Generic;\n\n[RequireComponent (typeof(AudioSource))]\npublic class AudioProcessor : MonoBehaviour\n{\n\tpublic AudioSource audioSource;\n\n\tprivate long lastT, nowT, diff, entries, sum;\n\n\tpublic int bufferSize = 1024;\n\t// fft size\n\tprivate int samplingRate = 44100;\n\t// fft sampling frequency\n\n\t/* log-frequency averaging controls */\n\tprivate int nBand = 12;\n\t// number of bands\n\n\tpublic float gThresh = 0.1f;\n\t// sensitivity\n\n\tint blipDelayLen = 16;\n\tint[] blipDelay;\n\n\tprivate int sinceLast = 0;\n\t// counter to suppress double-beats\n\n\tprivate float framePeriod;\n\n\t/* storage space */\n\tprivate int colmax = 120;\n\tfloat[] spectrum;\n\tfloat[] averages;\n\tfloat[] acVals;\n\tfloat[] onsets;\n\tfloat[] scorefun;\n\tfloat[] dobeat;\n\tint now = 0;\n\t// time index for circular buffer within above\n\n\tfloat[] spec;\n\t// the spectrum of the previous step\n\n\t/* Autocorrelation structure */\n\tint maxlag = 100;\n\t// (in frames) largest lag to track\n\tfloat decay = 0.997f;\n\t// smoothing constant for running average\n\tAutoco auco;\n\n\tprivate float alph;\n\t// trade-off constant between tempo deviation penalty and onset strength\n\n\t[Header (\"Events\")]\n\tpublic OnBeatEventHandler onBeat;\n\tpublic OnSpectrumEventHandler onSpectrum;\n\n\t//////////////////////////////////\n\tprivate long getCurrentTimeMillis ()\n\t{\n\t\tlong milliseconds = System.DateTime.Now.Ticks / System.TimeSpan.TicksPerMillisecond;\n\t\treturn milliseconds;\n\t}\n\n\tprivate void initArrays ()\n\t{\n\t\tblipDelay = new int[blipDelayLen];\n\t\tonsets = new float[colmax];\n\t\tscorefun = new float[colmax];\n\t\tdobeat = new float[colmax];\n\t\tspectrum = new float[bufferSize];\n\t\taverages = new float[12];\n\t\tacVals = new float[maxlag];\n\t\talph = 100 * gThresh;\n\t}\n\n\t// Use this for initialization\n\tvoid Start ()\n\t{\n\t\tinitArrays ();\n\n\t\taudioSource = GetComponent<AudioSource> ();\n\t\tsamplingRate = audioSource.clip.frequency;\n\n\t\tframePeriod = (float)bufferSize / (float)samplingRate;\n\n\t\t//initialize record of previous spectrum\n\t\tspec = new float[nBand];\n\t\tfor (int i = 0; i < nBand; ++i)\n\t\t\tspec [i] = 100.0f;\n\n\t\tauco = new Autoco (maxlag, decay, framePeriod, getBandWidth ());\n\n\t\tlastT = getCurrentTimeMillis ();\n\t}\n\n\tpublic void tapTempo ()\n\t{\n\t\tnowT = getCurrentTimeMillis ();\n\t\tdiff = nowT - lastT;\n\t\tlastT = nowT;\n\t\tsum = sum + diff;\n\t\tentries++;\n\n\t\tint average = (int)(sum / entries);\n\n\t\tDebug.Log (\"average = \" + average);\n\t}\n\n\tdouble[] toDoubleArray (float[] arr)\n\t{\n\t\tif (arr == null)\n\t\t\treturn null;\n\t\tint n = arr.Length;\n\t\tdouble[] ret = new double[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tret [i] = (float)arr [i];\n\t\t}\n\t\treturn ret;\n\t}\n\n\t// Update is called once per frame\n\tvoid Update ()\n\t{\n\t\tif (audioSource.isPlaying) {\n\t\t\taudioSource.GetSpectrumData (spectrum, 0, FFTWindow.BlackmanHarris);\n\t\t\tcomputeAverages (spectrum);\n\t\t\tonSpectrum.Invoke (averages);\n\n\t\t\t/* calculate the value of the onset function in this frame */\n\t\t\tfloat onset = 0;\n\t\t\tfor (int i = 0; i < nBand; i++) {\n\t\t\t\tfloat specVal = (float)System.Math.Max (-100.0f, 20.0f * (float)System.Math.Log10 (averages [i]) + 160); // dB value of this band\n\t\t\t\tspecVal *= 0.025f;\n\t\t\t\tfloat dbInc = specVal - spec [i]; // dB increment since last frame\n\t\t\t\tspec [i] = specVal; // record this frome to use next time around\n\t\t\t\tonset += dbInc; // onset function is the sum of dB increments\n\t\t\t}\n\n\t\t\tonsets [now] = onset;\n\n\t\t\t/* update autocorrelator and find peak lag = current tempo */\n\t\t\tauco.newVal (onset);\n\t\t\t// record largest value in (weighted) autocorrelation as it will be the tempo\n\t\t\tfloat aMax = 0.0f;\n\t\t\tint tempopd = 0;\n\t\t\t//float[] acVals = new float[maxlag];\n\t\t\tfor (int i = 0; i < maxlag; ++i) {\n\t\t\t\tfloat acVal = (float)System.Math.Sqrt (auco.autoco (i));\n\t\t\t\tif (acVal > aMax) {\n\t\t\t\t\taMax = acVal;\n\t\t\t\t\ttempopd = i;\n\t\t\t\t}\n\t\t\t\t// store in array backwards, so it displays right-to-left, in line with traces\n\t\t\t\tacVals [maxlag - 1 - i] = acVal;\n\t\t\t}\n\n\t\t\t/* calculate DP-ish function to update the best-score function */\n\t\t\tfloat smax = -999999;\n\t\t\tint smaxix = 0;\n\t\t\t// weight can be varied dynamically with the mouse\n\t\t\talph = 100 * gThresh;\n\t\t\t// consider all possible preceding beat times from 0.5 to 2.0 x current tempo period\n\t\t\tfor (int i = tempopd / 2; i < System.Math.Min (colmax, 2 * tempopd); ++i) {\n\t\t\t\t// objective function - this beat's cost + score to last beat + transition penalty\n\t\t\t\tfloat score = onset + scorefun [(now - i + colmax) % colmax] - alph * (float)System.Math.Pow (System.Math.Log ((float)i / (float)tempopd), 2);\n\t\t\t\t// keep track of the best-scoring predecesor\n\t\t\t\tif (score > smax) {\n\t\t\t\t\tsmax = score;\n\t\t\t\t\tsmaxix = i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tscorefun [now] = smax;\n\t\t\t// keep the smallest value in the score fn window as zero, by subtracing the min val\n\t\t\tfloat smin = scorefun [0];\n\t\t\tfor (int i = 0; i < colmax; ++i)\n\t\t\t\tif (scorefun [i] < smin)\n\t\t\t\t\tsmin = scorefun [i];\n\t\t\tfor (int i = 0; i < colmax; ++i)\n\t\t\t\tscorefun [i] -= smin;\n\n\t\t\t/* find the largest value in the score fn window, to decide if we emit a blip */\n\t\t\tsmax = scorefun [0];\n\t\t\tsmaxix = 0;\n\t\t\tfor (int i = 0; i < colmax; ++i) {\n\t\t\t\tif (scorefun [i] > smax) {\n\t\t\t\t\tsmax = scorefun [i];\n\t\t\t\t\tsmaxix = i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// dobeat array records where we actally place beats\n\t\t\tdobeat [now] = 0;  // default is no beat this frame\n\t\t\t++sinceLast;\n\t\t\t// if current value is largest in the array, probably means we're on a beat\n\t\t\tif (smaxix == now) {\n\t\t\t\t//tapTempo();\n\t\t\t\t// make sure the most recent beat wasn't too recently\n\t\t\t\tif (sinceLast > tempopd / 4) {\n\t\t\t\t\tonBeat.Invoke ();\t\t\t\n\t\t\t\t\tblipDelay [0] = 1;\n\t\t\t\t\t// record that we did actually mark a beat this frame\n\t\t\t\t\tdobeat [now] = 1;\n\t\t\t\t\t// reset counter of frames since last beat\n\t\t\t\t\tsinceLast = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* update column index (for ring buffer) */\n\t\t\tif (++now == colmax)\n\t\t\t\tnow = 0;\n\n\t\t\t//Debug.Log(System.Math.Round(60 / (tempopd * framePeriod)) + \" bpm\");\n\t\t\t//Debug.Log(System.Math.Round(auco.avgBpm()) + \" bpm\");\n\t\t}\n\t}\n\n\tpublic void changeCameraColor ()\n\t{\n\t\t//Debug.Log(\"camera\");\n\t\tfloat r = Random.Range (0f, 1f);\n\t\tfloat g = Random.Range (0f, 1f);\n\t\tfloat b = Random.Range (0f, 1f);\n\n\t\t//Debug.Log(r + \",\" + g + \",\" + b);\n\t\tColor color = new Color (r, g, b);\n\n\t\tGetComponent<Camera> ().clearFlags = CameraClearFlags.Color;\n\t\tCamera.main.backgroundColor = color;\n\n\t\t//camera.backgroundColor = color;\n\t}\n\n\tpublic float getBandWidth ()\n\t{\n\t\treturn (2f / (float)bufferSize) * (samplingRate / 2f);\n\t}\n\n\tpublic int freqToIndex (int freq)\n\t{\n\t\t// special case: freq is lower than the bandwidth of spectrum[0]\n\t\tif (freq < getBandWidth () / 2)\n\t\t\treturn 0;\n\t\t// special case: freq is within the bandwidth of spectrum[512]\n\t\tif (freq > samplingRate / 2 - getBandWidth () / 2)\n\t\t\treturn (bufferSize / 2);\n\t\t// all other cases\n\t\tfloat fraction = (float)freq / (float)samplingRate;\n\t\tint i = (int)System.Math.Round (bufferSize * fraction);\n\t\t//Debug.Log(\"frequency: \" + freq + \", index: \" + i);\n\t\treturn i;\n\t}\n\n\tpublic void computeAverages (float[] data)\n\t{\n\t\tfor (int i = 0; i < 12; i++) {\n\t\t\tfloat avg = 0;\n\t\t\tint lowFreq;\n\t\t\tif (i == 0)\n\t\t\t\tlowFreq = 0;\n\t\t\telse\n\t\t\t\tlowFreq = (int)((samplingRate / 2) / (float)System.Math.Pow (2, 12 - i));\n\t\t\tint hiFreq = (int)((samplingRate / 2) / (float)System.Math.Pow (2, 11 - i));\n\t\t\tint lowBound = freqToIndex (lowFreq);\n\t\t\tint hiBound = freqToIndex (hiFreq);\n\t\t\tfor (int j = lowBound; j <= hiBound; j++) {\n\t\t\t\t//Debug.Log(\"lowbound: \" + lowBound + \", highbound: \" + hiBound);\n\t\t\t\tavg += data [j];\n\t\t\t}\n\t\t\t// line has been changed since discussion in the comments\n\t\t\t// avg /= (hiBound - lowBound);\n\t\t\tavg /= (hiBound - lowBound + 1);\n\t\t\taverages [i] = avg;\n\t\t}\n\t}\n\n\tfloat map (float s, float a1, float a2, float b1, float b2)\n\t{\n\t\treturn b1 + (s - a1) * (b2 - b1) / (a2 - a1);\n\t}\n\n\tpublic float constrain (float value, float inclusiveMinimum, float inlusiveMaximum)\n\t{\n\t\tif (value >= inclusiveMinimum) {\n\t\t\tif (value <= inlusiveMaximum) {\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t\treturn inlusiveMaximum;\n\t\t}\n\n\t\treturn inclusiveMinimum;\n\t}\n\n\t[System.Serializable]\n\tpublic class OnBeatEventHandler : UnityEngine.Events.UnityEvent\n\t{\n\n\t}\n\n\t[System.Serializable]\n\tpublic class OnSpectrumEventHandler : UnityEngine.Events.UnityEvent<float []>\n\t{\n\n\t}\n\n\t// class to compute an array of online autocorrelators\n\tprivate class Autoco\n\t{\n\t\tprivate int del_length;\n\t\tprivate float decay;\n\t\tprivate float[] delays;\n\t\tprivate float[] outputs;\n\t\tprivate int indx;\n\n\t\tprivate float[] bpms;\n\t\tprivate float[] rweight;\n\t\tprivate float wmidbpm = 120f;\n\t\tprivate float woctavewidth;\n\n\t\tpublic Autoco (int len, float alpha, float framePeriod, float bandwidth)\n\t\t{\n\t\t\twoctavewidth = bandwidth;\n\t\t\tdecay = alpha;\n\t\t\tdel_length = len;\n\t\t\tdelays = new float[del_length];\n\t\t\toutputs = new float[del_length];\n\t\t\tindx = 0;\n\n\t\t\t// calculate a log-lag gaussian weighting function, to prefer tempi around 120 bpm\n\t\t\tbpms = new float[del_length];\n\t\t\trweight = new float[del_length];\n\t\t\tfor (int i = 0; i < del_length; ++i) {\n\t\t\t\tbpms [i] = 60.0f / (framePeriod * (float)i);\n\t\t\t\t//Debug.Log(bpms[i]);\n\t\t\t\t// weighting is Gaussian on log-BPM axis, centered at wmidbpm, SD = woctavewidth octaves\n\t\t\t\trweight [i] = (float)System.Math.Exp (-0.5f * System.Math.Pow (System.Math.Log (bpms [i] / wmidbpm) / System.Math.Log (2.0f) / woctavewidth, 2.0f));\n\t\t\t}\n\t\t}\n\n\t\tpublic void newVal (float val)\n\t\t{\n\n\t\t\tdelays [indx] = val;\n\n\t\t\t// update running autocorrelator values\n\t\t\tfor (int i = 0; i < del_length; ++i) {\n\t\t\t\tint delix = (indx - i + del_length) % del_length;\n\t\t\t\toutputs [i] += (1 - decay) * (delays [indx] * delays [delix] - outputs [i]);\n\t\t\t}\n\n\t\t\tif (++indx == del_length)\n\t\t\t\tindx = 0;\n\t\t}\n\n\t\t// read back the current autocorrelator value at a particular lag\n\t\tpublic float autoco (int del)\n\t\t{\n\t\t\tfloat blah = rweight [del] * outputs [del];\n\t\t\treturn blah;\n\t\t}\n\n\t\tpublic float avgBpm ()\n\t\t{\n\t\t\tfloat sum = 0;\n\t\t\tfor (int i = 0; i < bpms.Length; ++i) {\n\t\t\t\tsum += bpms [i];\n\t\t\t}\n\t\t\treturn sum / del_length;\n\t\t}\n\t}\n\n\t\n}\n\n\n",
			"file": "Assets/Scripts/AudioProcessor.cs",
			"file_size": 10539,
			"file_write_time": 131379632890000000,
			"settings":
			{
				"buffer_size": 10539,
				"encoding": "UTF-8 with BOM",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 354.0,
		"last_filter": "material",
		"selected_items":
		[
			[
				"material",
				"Material Theme: Configuration"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"theme",
				"Material Theme: Activate theme"
			],
			[
				"packa",
				"Package Control: Disable Package"
			],
			[
				"",
				"Package Control: Install Package"
			]
		],
		"width": 850.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/tarrouye/Github/SoundRider/SoundRider/Assets",
		"/Users/tarrouye/Github/SoundRider/SoundRider/Assets/Plugins",
		"/Users/tarrouye/Github/SoundRider/SoundRider/Assets/Plugins/FarlandSkies",
		"/Users/tarrouye/Github/SoundRider/SoundRider/Assets/Plugins/FarlandSkies/Demo",
		"/Users/tarrouye/Github/SoundRider/SoundRider/Assets/Plugins/FarlandSkies/Demo/Scripts",
		"/Users/tarrouye/Github/SoundRider/SoundRider/Assets/Plugins/FarlandSkies/Demo/Scripts/Skybox"
	],
	"file_history":
	[
		"/Users/tarrouye/Github/SoundRider/SoundRider/soundrider.sublime-project",
		"/Users/tarrouye/Github/SoundRider/SoundRider/Assets/Scripts/AudioProcessor.cs.meta",
		"/Users/tarrouye/Github/bose-prototype-unity/boseARprototype/Assets/_Core/Script/SceneLoader.cs",
		"/Users/tarrouye/Github/bose-prototype-unity/boseARprototype/Assets/_Core/Script/Blockman.cs",
		"/Users/tarrouye/Github/bose-prototype-unity/boseARprototype/Assets/_Core/Script/SceneLoaderTrackableEventHandler.cs",
		"/Users/tarrouye/Github/bose-prototype-unity/boseARprototype/bosearsublime",
		"/Users/tarrouye/Github/bose-prototype-unity/boseARprototype/Assets/Vuforia/Scripts/DefaultTrackableEventHandler.cs",
		"/Users/tarrouye/.bash_profile",
		"/Users/tarrouye/Github/bose-prototype-unity/boseARprototype/Assets/_Core/Script/DiscoLighting.cs",
		"/Users/tarrouye/Github/bose-prototype-unity/boseARprototype/Assets/_Core/Script/WaveController.cs",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1492489943/CTGSTUFF/public_html/games/jon/testMenu.HTML",
		"/Users/tarrouye/Downloads/gameCode/.htaccess",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1492373170/CTGSTUFF/public_html/games/kai/.htaccess",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1492373124/CTGSTUFF/public_html/games/.htaccess",
		"/Users/tarrouye/Downloads/index.html",
		"/Users/tarrouye/Documents/Github/bose-prototype-unity/.gitignore",
		"/Users/tarrouye/Documents/Github/bose-prototype-unity/.gitattributes",
		"/Users/tarrouye/.gitconfig",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1488165332/CTGSTUFF/public_html/games/dontstep/Tilesgame.pde",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1488165424/CTGSTUFF/public_html/games/ladderman/game.html",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1488164498/CTGSTUFF/public_html/games/list.html",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1488163739/CTGSTUFF/public_html/games/clumsysurfing/about.html",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1488164073/CTGSTUFF/public_html/games/navbar.js",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1488165320/CTGSTUFF/public_html/games/dontstep/game.html",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1488165383/CTGSTUFF/public_html/games/5doors/game.html",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1488163701/CTGSTUFF/public_html/games/clumsyboxing/about.html",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1488163715/CTGSTUFF/public_html/games/clumsysurfing/.htaccess",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1488163658/CTGSTUFF/public_html/games/clumsyboxing/.htaccess",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1488163319/CTGSTUFF/public_html/games/updatescore.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1488163306/CTGSTUFF/public_html/games/updatename.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1488163294/CTGSTUFF/public_html/games/retrievescore.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1488163284/CTGSTUFF/public_html/games/retrievename.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1488163230/CTGSTUFF/public_html/games/outputscores.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1488163182/CTGSTUFF/public_html/games/highscores.js",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1488163217/CTGSTUFF/public_html/games/adduser.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1488163204/CTGSTUFF/public_html/games/usersConn.php",
		"/Users/tarrouye/Library/Application Support/Sublime Text 3/Packages/User/sftp_servers/srikar",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487203828/srikar/public_html/Tilesgame.pde",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487203814/CTGSTUFF/public_html/games/dontstep/Tilesgame.pde",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487204297/srikar/public_html/Tilesgame.pde",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487204773/srikar/public_html/game.html",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487204020/srikar/public_html/game.html",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487202280/srikar/public_html/conn.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487202258/CTGSTUFF/public_html/games/usersConn.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487201982/srikar/public_html/.htaccess",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487205317/srikar/public_html/outputscores.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487202074/srikar/public_html/leaderboard.html",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487205046/srikar/public_html/highscores.js",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487204875/srikar/public_html/highscores.js",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487203727/CTGSTUFF/public_html/games/dontstep/game.html",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487203628/CTGSTUFF/public_html/games/ladderman/game.html",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487203379/srikar/public_html/highscores.js",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487203354/CTGSTUFF/public_html/games/highscores.js",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487203291/srikar/public_html/updatescore.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487203274/CTGSTUFF/public_html/games/updatescore.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487203193/CTGSTUFF/public_html/games/updatename.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487203206/srikar/public_html/updatename.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487203135/srikar/public_html/retrievescore.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487203121/CTGSTUFF/public_html/games/retrievescore.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487203026/CTGSTUFF/public_html/games/retrievename.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487203059/srikar/public_html/retrievename.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487202970/CTGSTUFF/public_html/games/crypto.js",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487203002/srikar/public_html/crypto.js",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487202989/srikar/public_html/crypto.ks",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487202788/srikar/public_html/adduser.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487202466/CTGSTUFF/public_html/games/adduser.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487202529/srikar/public_html/outputscores.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487202511/CTGSTUFF/public_html/games/outputscores.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487202371/CTGSTUFF/public_html/games/outputscores.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1487202001/CTGSTUFF/public_html/.htaccess",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1486452761/CTGSTUFF/public_html/games/highscores.js",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1486452810/CTGSTUFF/public_html/games/usersConn.php",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1486452167/CTGSTUFF/public_html/games/super_tic_tac_toe/Super_Tic_Tac_Toe.pde",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1486452406/CTGSTUFF/public_html/games/snake/Snake.pde",
		"/Users/tarrouye/Library/Application Support/Sublime Text 3/Packages/User/sftp_servers/CTGSTUFF",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1486452316/CTGSTUFF/public_html/games/dontstep/Tilesgame.pde",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1486452269/CTGSTUFF/public_html/games/number_rush/Number_Rush.pde",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1486452227/CTGSTUFF/public_html/games/takuzu/Takuzu.pde",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1486452432/CTGSTUFF/public_html/games/ladderman/Ladderman.pde",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1486452475/CTGSTUFF/public_html/games/gradientpuzzle/Gradientpuzzle.pde",
		"/var/folders/_q/j_nld8w12y345kwm23wvmqp40000gn/T/sublime-sftp-browse-1486452498/CTGSTUFF/public_html/games/5doors/sketch_5_Doors.pde"
	],
	"find":
	{
		"height": 48.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"highscore",
			"generatePlatform"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": false
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Assets/Scripts/Example.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1499,
						"regions":
						{
						},
						"selection":
						[
							[
								1496,
								1496
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C#/C#.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 106.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Assets/_Core/Scripts/PlatformCreator.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5319,
						"regions":
						{
						},
						"selection":
						[
							[
								2156,
								2042
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C#/C#.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1538.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Assets/_Core/Scripts/PlayerController.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2535,
						"regions":
						{
						},
						"selection":
						[
							[
								1577,
								1577
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C#/C#.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 141.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Assets/_Core/Scripts/Tween.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1114,
						"regions":
						{
						},
						"selection":
						[
							[
								845,
								845
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"syntax": "Packages/C#/C#.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Assets/_Core/Scripts/SkyboxHandler.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 653,
						"regions":
						{
						},
						"selection":
						[
							[
								169,
								169
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"syntax": "Packages/C#/C#.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "Assets/Plugins/FarlandSkies/Demo/Scripts/Skybox/SkyboxRotator.cs",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 350,
						"regions":
						{
						},
						"selection":
						[
							[
								69,
								348
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C#/C#.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "Assets/Scripts/Rotate.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 274,
						"regions":
						{
						},
						"selection":
						[
							[
								244,
								244
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C#/C#.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "Assets/Scripts/AudioProcessor.cs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10539,
						"regions":
						{
						},
						"selection":
						[
							[
								2789,
								2789
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C#/C#.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1214.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 25.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 100.0
	},
	"output.variable_get":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "soundrider.sublime-project",
	"replace":
	{
		"height": 46.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 185.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
